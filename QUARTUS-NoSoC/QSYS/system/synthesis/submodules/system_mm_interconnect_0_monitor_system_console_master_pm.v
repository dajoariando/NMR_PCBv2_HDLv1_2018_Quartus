// system_mm_interconnect_0_monitor_system_console_master_pm.v

// This file was auto-generated from altera_avst_throughput_monitor_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 17.1 590

`timescale 1 ps / 1 ps
module system_mm_interconnect_0_monitor_system_console_master_pm #(
		parameter BC_W            = 1,
		parameter ST_DATA_W       = 108,
		parameter PKT_BYTE_CNT_H  = 76,
		parameter PKT_BYTE_CNT_L  = 74,
		parameter PKT_TRANS_WRITE = 70,
		parameter PKT_TRANS_READ  = 71
	) (
		input  wire         avs_clock_clk,    // avs_clock.clk
		input  wire         avs_reset_reset,  // avs_reset.reset
		input  wire         if_clock_clk,     //  if_clock.clk
		input  wire         if_reset_reset,   //  if_reset.reset
		input  wire         cp_valid,         //        cp.valid
		input  wire [107:0] cp_data,          //          .data
		input  wire         cp_ready,         //          .ready
		input  wire         rp_valid,         //        rp.valid
		input  wire [1:0]   data_address,     //      data.address
		input  wire         data_read,        //          .read
		output wire [31:0]  data_readdata,    //          .readdata
		output wire         data_waitrequest, //          .waitrequest
		input  wire [1:0]   config_address,   //    config.address
		output wire [31:0]  config_readdata   //          .readdata
	);

	wire        xlate_if_waitrequest;   // xlate:if_waitrequest -> pmon:if_waitrequest
	wire        xlate_if_read;          // xlate:if_read -> pmon:if_read
	wire        xlate_if_readdatavalid; // xlate:if_readdatavalid -> pmon:if_readdatavalid
	wire        xlate_if_write;         // xlate:if_write -> pmon:if_write
	wire  [0:0] xlate_if_burstcount;    // xlate:if_burstcount -> pmon:if_burstcount

	generate
		// If any of the display statements (or deliberately broken
		// instantiations) within this generate block triggers then this module
		// has been instantiated this module with a set of parameters different
		// from those it was generated for.  This will usually result in a
		// non-functioning system.
		if (BC_W != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					bc_w_check ( .error(1'b1) );
		end
		if (ST_DATA_W != 108)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					st_data_w_check ( .error(1'b1) );
		end
		if (PKT_BYTE_CNT_H != 76)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					pkt_byte_cnt_h_check ( .error(1'b1) );
		end
		if (PKT_BYTE_CNT_L != 74)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					pkt_byte_cnt_l_check ( .error(1'b1) );
		end
		if (PKT_TRANS_WRITE != 70)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					pkt_trans_write_check ( .error(1'b1) );
		end
		if (PKT_TRANS_READ != 71)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					pkt_trans_read_check ( .error(1'b1) );
		end
	endgenerate

	altera_avalon_throughput_monitor #(
		.BC_W (1)
	) pmon (
		.avs_clock        (avs_clock_clk),          // avs_clock.clk
		.if_clock         (if_clock_clk),           //  if_clock.clk
		.avs_reset        (avs_reset_reset),        // avs_reset.reset
		.if_reset         (if_reset_reset),         //  if_reset.reset
		.if_read          (xlate_if_read),          //        if.read
		.if_write         (xlate_if_write),         //          .write
		.if_burstcount    (xlate_if_burstcount),    //          .burstcount
		.if_waitrequest   (xlate_if_waitrequest),   //          .waitrequest
		.if_readdatavalid (xlate_if_readdatavalid), //          .readdatavalid
		.avs_address      (data_address),           //      data.address
		.avs_read         (data_read),              //          .read
		.avs_readdata     (data_readdata),          //          .readdata
		.avs_waitrequest  (data_waitrequest),       //          .waitrequest
		.ctl_address      (config_address),         //    config.address
		.ctl_readdata     (config_readdata)         //          .readdata
	);

	altera_throughput_tap_xlate #(
		.ST_DATA_W       (108),
		.BC_W            (1),
		.BURSTCOUNT_LSB  (76),
		.PKT_BYTE_CNT_H  (76),
		.PKT_BYTE_CNT_L  (74),
		.PKT_TRANS_WRITE (70),
		.PKT_TRANS_READ  (71)
	) xlate (
		.if_clock         (if_clock_clk),           // if_clock.clk
		.if_reset         (if_reset_reset),         // if_reset.reset
		.cp_valid         (cp_valid),               //       cp.valid
		.cp_data          (cp_data),                //         .data
		.cp_ready         (cp_ready),               //         .ready
		.rp_valid         (rp_valid),               //       rp.valid
		.if_read          (xlate_if_read),          //       if.read
		.if_write         (xlate_if_write),         //         .write
		.if_burstcount    (xlate_if_burstcount),    //         .burstcount
		.if_waitrequest   (xlate_if_waitrequest),   //         .waitrequest
		.if_readdatavalid (xlate_if_readdatavalid)  //         .readdatavalid
	);

endmodule
